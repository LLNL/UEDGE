C     ALGORITHM 614 COLLECTED ALGORITHMS FROM ACM.
C     ALGORITHM APPEARED IN ACM-TRANS. MATH. SOFTWARE, VOL.10, NO. 2,
C     JUN., 1984, P. 152-160.
      SUBROUTINE INTHP(A, B, D, F, M, P, EPS, INF, QUADR)
      IMPLICIT NONE
C
C        THIS SUBROUTINE COMPUTES INTEGRAL OF FUNCTIONS WHICH
C     MAY HAVE SINGULARITIES AT ONE OR BOTH END-POINTS OF AN
C     INTERVAL (A,B), SEE [1, 2]. IT CONTAINS FOUR DIFFERENT
C     QUADRATURE ROUTINES: ONE OVER A FINITE INTERVAL (A,B),
C     TWO OVER (A,+INFINITY), AND ONE OVER (-INFINITY,+INFINITY).
C     OF THE TWO FORMULAS OVER (A,+INFINITY), THE FIRST (INF=2
C     BELOW) IS MORE SUITED TO NON-OSCILLATORY INTEGRANDS, WHILE
C     THE SECOND (INF=3) IS MORE SUITED TO OSCILLATORY INTEGRANDS.
C        THE USER SUPPLIES THE INTEGRAND FUNCTION, HE SPECIFIES THE
C     INTERVAL, AS WELL AS THE RELATIVE ERROR TO WHICH THE INTE-
C     GRAL IS TO BE EVALUATED.
C        THE FORMULAS ARE OPTIMAL IN CERTAIN HARDY SPACES H(P,DD),
C     SEE [1, 2]. HERE DD IS AN OPEN DOMAIN IN THE COMPLEX PLANE,
C     A AND B BELONG TO THE BOUNDARY OF DD AND H(P,DD), P.GT.1, IS
C     THE SET OF ALL ANALYTIC FUNCTONS IN DD WHOSE P-TH NORM DEFI-
C     NED AS IN [2] IS FINITE.
C        IF THE USER IS UNABLE TO SPECIFY THE PARAMETERS P AND D
C     OF THE SPACE H(P,DD) TO WHICH HIS INTEGRAND BELONGS, THE
C     ALGORITHM TERMINATES ACCORDING TO A HEURISTIC CRITERION, SEE
C     [2] AND COMMENTS TO EPS.
C        IF THE USER CAN SPECIFY THE PARAMETERS P AND D OF THE
C     SPACE H(P,DD) TO WHICH HIS INTEGRAND BELONGS, THE ALGORITHM
C     TERMINATES WITH AN ANSWER HAVING A GUARANTEED ACCURACY ( DE-
C     TEMINISTIC CRITERION, SEE [1, 2] AND COMMENTS TO EPS).
C
C
C
C
C     INPUT PARAMETERS
C
C
C     A = LOWER LIMIT OF INTEGRATION (SEE COMMENTS TO INF).
C
C     B = UPPER LIMIT OF INTEGRATION (SEE COMMENTS TO INF).
C
C     D = A PARAMETER OF THE CLASS H(P,DD) (SEE COMMENTS TO
C         INF).
C
C         USER SETS D:
C
C         HEURISTIC TERMINATION
C       = ANY REAL NUMBER
C
C         DETERMINISTIC TERMINATION
C       = A NUMBER IN THE RANGE 0.LT.D.LE.PI/2.
C
C     F = A NAME OF AN EXTERNAL INTEGRAND FUNCTION TO BE
C         SUPPLIED BY THE USER. F(X) COMPUTES THE VALUE OF
C         A FUNCTION F AT A POINT X. THE STATEMENT
C         ...EXTERNAL F... MUST APPEAR IN THE MAIN PROGRAM.
C
C     M = MAXIMAL NUMBER OF FUNCTION EVALUATIONS ALLOWED IN
C         THE COMPUTATIONS, M.GE.3.( ALTERED ON EXIT ).
C
C     P = 0, 1, .GT.1  A PARAMETER OF THE CLASS H(P,DD).
C
C         USER SETS P:
C       = 0 - HEURISTIC TERMINATION.
C       = 1 - DETERMINISTIC TERMINATION WITH THE INFINITY
C             NORM.
C      .GT.1 -DETERMINISTIC TERMINATION WITH THE P-TH NORM.
C
C   EPS = A REAL NUMBER - THE RELATIVE ERROR BOUND - SEE
C         REMARKS BELOW. ( ALTERED ON EXIT ).
C
C
C   INF = 1, 2, 3, 4 - INFORMATION PARAMETER. ( ALTERED ON EXIT ).
C
C       = 1 SIGNIFIES AN INFINITE INTERVAL (A,B)=REAL LINE,
C           A AND B ANY NUMBERS.
C           DETERMINISTIC TERMINATION -
C           DD=STRIP(Z:ABS(IM(Z)).LT.D).
C
C       = 2 SIGNIFIES A SEMI-INFINITE INTERVAL (A, +INFINITY)
C           USER SUPPLIES A, B ANY NUMBER.
C           QUADRATURE SUITED TO NON-OSCILLATORY INTEGRANDS.
C           DETERMINISTIC TERMINATION -
C           DD=SECTOR(Z:ABS(ARG(Z-A)).LT.D).
C
C       = 3 SIGNIFIES A SEMI INFINITE INTERVAL (A,+INFINITY)
C           USER SUPPLIES A, B ANY NUMBER.
C           QUADRATURE SUITED TO OSCILLATORY INTEGRANDS.
C           DETERMINISTIC TERMINATION -
C           DD=REGION(Z:ABS(ARG(SINH(Z-A))).LT.D).
C
C       = 4 SIGNIFIES A FINITE INTERVAL (A,B).
C           USER SUPPLIES A AND B.
C           DETERMINISTIC TERMINATION -
C           DD=LENS REGION(Z:ABS(ARG((Z-A)/(B-Z))).LT.D).
C
C
C
C
C     OUTPUT PARAMETERS
C
C
C     M = THE NUMBER OF FUNCTION EVALUATIONS USED IN THE
C         QUADRATURE.
C
C   EPS = THE RELATIVE ERROR BOUND (SEE REMARKS BELOW).
C
C         DETERMINISTIC TERMINATION
C
C       = THE RELATIVE ERROR REXA BOUND, I.E.,
C                 REXA(F,M(OUTPUT)) .LE. EPS.
C
C         HEURISTIC TERMINATION
C
C       = MAX(EPS(INPUT),MACHEP).
C
C   INF = 0, 1 - DETERMINISTIC TERMINATION
C
C       = 0 COMPUTED QUADRATURE QCOM(F,M(EPS)), SEE REMARKS
C           BELOW.
C
C       = 1 COMPUTED QUADRATURE QCOM(F,M1), SEE REMARKS
C           BELOW.
C
C   INF = 2, 3, 4 - HEURISTIC TERMINATION.
C
C       = 2 INTEGRATION COMPLETED WITH EPS=MAX(EPS(INPUT),
C           MACHEP). WE CAN EXPECT THE RELATIVE ERROR
C           REXA TO BE OF THE ORDER OF EPS (FOR SOME P.GE.1).
C
C       = 3 INTEGRATION NOT COMPLETED. ATTEMPT TO EXCEED THE
C           MAXIMAL ALLOWED NUMBER OF FUNCTION EVALUATIONS M.
C           TRUNCATION CONDITIONS (SEE [2]) SATISFIED. QUADR
C           SET TO BE EQUAL TO THE LAST TRAPEZOIDAL APPRO-
C           XIMATION. IT IS LIKELY THAT QUADR APPROXIMATES THE
C           INTEGRAL IF M IS LARGE.
C
C       = 4 INTEGRATION NOT COMPLETED. ATTEMPT TO EXCEED THE
C           MAXIMAL ALLOWED NUMBER OF FUNCTION EVALUATIONS M.
C           TRUNCATION CONDITIONS (SEE [2]) NOT SATISFIED.
C           QUADR SET TO BE EQUAL TO THE COMPUTED TRAPEZOIDAL
C           APPROXIMATION. IT IS UNLIKELY THAT QUADR APPROXIMATES
C           THE INTEGRAL.
C
C   INF = 10, 11, 12, 13 - INCORRECT INPUT
C
C       = 10  M.LT.3.
C
C       = 11  P DOES NOT SATISFY P=0, P=1 OR P.GT.1 OR IN THE
C             CASE OF DETERMINISTIC TERMINATION D DOES NOT
C             SATISFY 0.LT.D.LE.PI/2.
C
C       = 12  A.GE.B IN CASE OF A FINITE INTERVAL.
C
C       = 13  INF NOT EQUAL TO 1, 2, 3, OR 4.
C
C
C   QUADR = THE COMPUTED VALUE OF QUADRATURE.
C
C
C
C
C     REMARKS:
C
C         LET  QEXA(F,M)  ( QCOM(F,M) ) BE THE EXACT (COMPUTED)
C         VALUE OF THE QUADRATURE WITH M FUNCTION EVALUATIONS,
C         AND LET  REXA(F,M) ( RCOM(F,M) ) BE THE RELATIVE ERROR
C         OF QEXA (QCOM) ,I.E.,
C            REXA(F,M)=ABS(INTEGRAL(F)-QEXA(F,M))/NORM(F),
C            RCOM(F,M)=ABS(INTEGRAL(F)-QCOM(F,M))/NORM(F),
C         WITH THE NOTATION 0/0=0.
C             DUE TO THE ROUNDOFF ONE CANNOT EXPECT THE ERROR
C         RCOM TO BE LESS THAN THE RELATIVE MACHINE PRECISION
C         MACHEP. THEREFORE THE INPUT VALUE OF EPS IS CHANGED
C         ACCORDING TO THE FORMULA
C                   EPS=MAX(EPS,MACHEP).
C
C         DETERMINISTIC TERMINATON CASE
C
C             THE NUMBER OF FUNCTON EVALUATIONS M(EPS) IS COMPUTED
C         SO THAT THE ERROR REXA IS NO GREATER THAN EPS,I.E.,
C
C         (*)     REXA(F,M(EPS)) .LE. EPS .
C
C         IF M(EPS).LE.M THEN THE QUADRATURE QCOM(F,M(EPS)) IS COM-
C         PUTED. OTHERWISE, WHICH MEANS THAT EPS IS TOO SMALL WITH
C         RESPECT TO M, THE QUADRATURE QCOM(F,M1) IS COMPUTED, WHERE
C         M1=2*INT((M-1)/2)+1. IN THIS CASE EPS IS CHANGED TO THE
C         SMALLEST NUMBER FOR WHICH THE ESTIMATE (*) HOLDS WITH
C         M(EPS)=M1 FUNCTION EVALUATIONS.
C
C         HEURISTIC TERMINATION CASE
C
C             WE CAN EXPECT THE RELATIVE ERROR REXA TO BE OF THE
C         ORDER OF EPS, SEE [2]. IF EPS IS TOO SMALL WITH RESPECT
C         TO M THEN THE QUADRATURE QCOM(F,M) IS COMPUTED.
C
C         ROUNDOFF ERRORS
C
C             IN BOTH DETERMINISTIC AND HEURISTIC CASES THE ROUND-
C         OFF ERROR
C                    ROFF=ABS(QEXA(F,M)-QCOM(F,M))
C         CAN BE ESTIMATED BY
C
C         (**)       ROFF .LE. 3*C1*R*MACHEP,
C
C         WHERE  R=QCOM(ABS(F),M)+(1+2*C2)/3*SUM(W(I),I=1,2,...M)
C         AND C1 IS OF THE ORDER OF UNITY, C1=1/(1-3*MACHEP), W(I)
C         ARE THE WEIGHTS OF THE QUADRATURE, SEE [2], AND C2 IS
C         A CONSTANT ESTIMATING THE ACCURACY OF COMPUTING FUNCTION
C         VALUES, I.E.,
C               ABS(EXACT(F(X))-COMPUTED(F(X))).LE.C2*MACHEP.
C         IF THE INTEGRAND VALUES ARE COMPUTED INACCURATELY, I.E.,
C         C2 IS LARGE, THEN THE ESTIMATE (**) IS LARGE AND ONE CAN
C         EXPECT THE ACTUAL ERROR ROFF TO BE LARGE. NUMERICAL TESTS
C         INDICATE THAT THIS HAPPENS ESPECIALLY WHEN THE INTEGRAND
C         IS EVALUATED INACCURATELY NEAR A SINGULARITY. THE WAYS OF
C         CIRCUMVENTING SUCH PITFALLS ARE EXPLAINED IN [2].
C
C     REFERENCES:
C
C     [1] SIKORSKI,K., OPTIMAL QUADRATURE ALGORITHMS IN HP
C            SPACES, NUM. MATH., 39, 405-410 (1982).
C     [2] SIKORSKI,K., STENGER,F., OPTIMAL QUADRATURES IN
C            HP SPACES, ACM TOMS.
C
C
C
C
C
      INTEGER I, I1, INF, K, L, L1, M, M1, M2, N, N1
      REAL*8 A, ALFA, B, BA, C, C0, COR, D, E1, EPS, EPS3, EXPH, EXPH0,
     * F, H, H0
      REAL*8 H1, P, PI, QUADR, S, S1, SR, SQ2, SUM, SUM1, SUM2, U, T, V,
     * V0, V1
      REAL*8 V2, W, W1, W2, W3, W4
      LOGICAL INF1, INF2
C
      PI = 4.D0*DATAN(1.D0)
C
C     CHECK THE INPUT DATA
C
      IF (INF.NE.1 .AND. INF.NE.2 .AND. INF.NE.3 .AND. INF.NE.4) GO TO
     * 300
      IF (M.LT.3) GO TO 270
      IF (P.LT.1.D0 .AND. P.NE.0.D0) GO TO 280
      IF (P.GE.1.D0 .AND. (D.LE.0.D0 .OR. D.GT.PI/2.D0)) GO TO 280
      IF (INF.EQ.4 .AND. A.GE.B) GO TO 290
C
      SQ2 = DSQRT(2.D0)
      I1 = INF - 2
      BA = B - A
      N1 = 0
C
C     COMPUTE THE RELATIVE MACHINE PRECISION AND CHECK
C     THE VALUE OF EPS.  CAUTION...THIS LOOP MAY NOT WORK ON A
C     MACHINE THAT HAS AN ACCURATED ARITHMETIC PROCESS COMPARED
C     TO THE STORAGE PRECISION.  THE VALUE OF U MAY NEED TO BE
C     SIMPLY DEFINED AS THE RELATIVE ACCURACY OF STORAGE PRECISION.
C
      U = 1.D0
   10 U = U/10.D0
      T = 1.D0 + U
      IF (1.D0.NE.T) GO TO 10
      U = U*10.D0
      IF (EPS.LT.U) EPS = U
C
      IF (P.EQ.0.D0) GO TO 40
C
C     SET UP DATA FOR THE DETERMINISTIC TERMINATION
C
      IF (P.EQ.1.D0) ALFA = 1.D0
      IF (P.GT.1.D0) ALFA = (P-1.D0)/P
      C = 2.D0*PI/(1.D0-1.D0/DEXP(PI*DSQRT(ALFA))) + 4.D0**ALFA/ALFA
      W = DLOG(C/EPS)
      W1 = 1.D0/(PI*PI*ALFA)*W*W
      N = IDINT(W1)
      IF (W1.GT.DFLOAT(N)) N = N + 1
      IF (W1.EQ.0.D0) N = 1
      N1 = 2*N + 1
      SR = DSQRT(ALFA*DFLOAT(N))
      IF (N1.LE.M) GO TO 20
C
C     EPS TOO SMALL WITH RESPECT TO M. COMPUTE THE NEW EPS
C     GUARANTEED BY THE VALUE OF M.
C
      N1 = 1
      N = IDINT(DFLOAT((M-1)/2))
      SR = DSQRT(ALFA*DFLOAT(N))
      M = 2*N + 1
      EPS = C/DEXP(PI*SR)
      GO TO 30
C
   20 M = N1
      N1 = 0
   30 H = 2.D0*D/SR
      SUM2 = 0.D0
      L1 = N
      K = N
      INF1 = .FALSE.
      INF2 = .FALSE.
      H0 = H
      GO TO 50
C
C     SET UP DATA FOR THE HEURISTIC TERMINATION
C
   40 H = 1.D0
      H0 = 1.D0
      EPS3 = EPS/3.D0
      SR = DSQRT(EPS)
      V1 = EPS*10.D0
      V2 = V1
      M1 = M - 1
      N = IDINT(DFLOAT(M1/2))
      M2 = N
      L1 = 0
      INF1 = .TRUE.
      INF2 = .FALSE.
C
C     INITIALIZE THE QUADRATURE
C
   50 I = 0
      IF (INF.EQ.1) SUM = F(0.D0)
      IF (INF.EQ.2) SUM = F(A+1.D0)
      IF (INF.EQ.3) SUM = F(A+DLOG(1.D0+SQ2))/SQ2
      IF (INF.EQ.4) SUM = F((A+B)/2.D0)/4.D0*BA
C
C     COMPUTE WEIGHTS, NODES AND FUNCTION VALUES
C
   60 EXPH = DEXP(H)
      EXPH0 = DEXP(H0)
      H1 = H0
      E1 = EXPH0
      U = 0.D0
      COR = 0.D0
C
   70 IF (I1) 80, 90, 100
C
   80 V = F(H1)
      H1 = H1 + H
      GO TO 150
C
   90 V = E1*F(A+E1)
      E1 = E1*EXPH
      GO TO 150
C
  100 IF (INF.EQ.4) GO TO 140
      W1 = DSQRT(E1+1.D0/E1)
      W2 = DSQRT(E1)
      IF (E1.LT..1D0) GO TO 110
      S = DLOG(E1+W1*W2)
      GO TO 130
  110 W3 = E1
      W4 = E1*E1
      C0 = 1.D0
      S = E1
      S1 = E1
      T = 0.D0
  120 C0 = -C0*(.5D0+T)*(2.D0*T+1.)/(2.D0*T+3.D0)/(T+1.D0)
      T = T + 1.D0
      W3 = W3*W4
      S = S + C0*W3
      IF (S.EQ.S1) GO TO 130
      S1 = S
      GO TO 120
  130 V = W2/W1*F(A+S)
      E1 = E1*EXPH
      GO TO 150
C
  140 W1 = E1 + 1.D0
      V = E1/(W1*W1)*F((A+B*E1)/W1)*BA
      E1 = E1*EXPH
C
C     SUMMATION ALGORITHM
C
  150 I = I + 1
      SUM1 = U + V
      IF (DABS(U).LT.DABS(V)) GO TO 160
      COR = V - (SUM1-U) + COR
      GO TO 170
  160 COR = U - (SUM1-V) + COR
  170 U = SUM1
      IF (I.LT.L1) GO TO 70
C
C     SWITCH TO CHECK TRUNCATION CONDITION ( HEURISTIC
C     TERMINATION)
C
      IF (INF1) GO TO 190
C
C     SWITCH TO COMPUTE THE MIDORDINATE APPROXIMATION
C     ( HEURISTIC TERMINATION ) OR TO STOP ( DETERMINIS-
C     TIC TERMINATION)
C
      IF (INF2) GO TO 210
C
C     SET UP PARAMETERS TO CONTINUE SUMMATION
C
      L1 = K
  180 INF2 = .TRUE.
      I = 0.D0
      EXPH = 1.D0/EXPH
      H0 = -H0
      E1 = 1.D0/EXPH0
      H1 = H0
      H = -H
      GO TO 70
C
C     TRUNCATION CONDITION
C
  190 V0 = V1
      V1 = V2
      V2 = DABS(V)
      IF (V0+V1+V2.LE.EPS3) GO TO 200
      IF (I.LT.M2) GO TO 70
      N1 = 5
  200 IF (INF2) K = I
      IF (.NOT.INF2) L = I
      V1 = 10.D0*EPS
      V2 = V1
      M2 = M1 - L
      IF (.NOT.INF2) GO TO 180
C
C     N1=5 - TRUNCATION CONDITION NOT SATISFIED
C
      IF (N1.EQ.5) GO TO 260
C
C     TRUNCATION CONDITION SATISFIED, SUM2=TRAPEZOIDAL
C     APPROXIMATION
C
      SUM2 = SUM1 + COR + SUM
      M2 = 2*(K+L)
C
C     CHECK THE NUMBER OF FUNCTION EVALUATIONS
C
      IF (M2.GT.M1) GO TO 240
C
C     INITIALIZE ITERATION
C
      INF1 = .FALSE.
      INF2 = .FALSE.
      L1 = L
      I = 0
      H = -H
      H0 = H/2.D0
      GO TO 60
C
C     P.GE.1 = DETERMINISTIC TERMINATION
C
  210 IF (P.GE.1.D0) GO TO 220
C
C     COMPUTE THE MIDORDINATE APPROXIMATION SUM1
C
      H = -H
      SUM1 = (SUM1+COR)*H
      W1 = (SUM1+SUM2)/2.D0
C
C     TERMINATION CONDITION
C
      IF (DABS(SUM1-SUM2).LE.SR) GO TO 230
C
C     SET UP DATA FOR THE NEXT ITERATION
C
      M2 = 2*M2
      IF (M2.GT.M1) GO TO 250
      I = 0
      K = 2*K
      L = 2*L
      L1 = L
      H = H/2.D0
      H0 = H/2.D0
      SUM2 = W1
      INF2 = .FALSE.
      GO TO 60
C
C     FINAL RESULTS
C
  220 QUADR = -H*(SUM1+COR+SUM)
      INF = N1
      RETURN
C
  230 QUADR = W1
      INF = 2
      M = M2 + 1
      RETURN
C
  240 QUADR = SUM2
      INF = 3
      M = K + L + 1
      RETURN
C
  250 QUADR = W1
      INF = 3
      M = M2/2 + 1
      RETURN
C
  260 QUADR = U + COR + SUM
      INF = 4
      M = K + L + 1
      RETURN
C
  270 INF = 10
      RETURN
C
  280 INF = 11
      RETURN
C
  290 INF = 12
      RETURN
C
  300 INF = 13
      RETURN
C
      END
