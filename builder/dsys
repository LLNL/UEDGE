#!/bin/sh
# A developer's script for use with uedge.

usage() {
cat <<EOF
Usage:
  dsys config [ -go ] <config-file> # Configure for <config-file>.
  dsys build    # Compile the code.
  dsys load     # Link the code (not included in build.)
  dsys test     # Run test suite.
  dsys mac      # Pre-process with the "mac" script.
  dsys clean    # Throw away object files, leave configuration.
  dsys delete [ pck | \$Arch ]
   # Delete pck files, or a specific architecture under ../dev, or
   # without arguments, delete *all* config and build products.
EOF
}

# Produce a list of project directories that have a "Package" file.
# Parent directory is listed last, if at all.
pkglist() {
  for i in ../*/Package .././Package; do
    [ -f $i ] && dirname $i
  done
}

# Execute an operation over all project package directories.
xop() {
  plist=`pkglist`
  for i in $plist; do
    (cd $i && test -x "$1" && "$@")
  done
}

getpack() {
  A=`$BASIS_ROOT/bin/cfgman use`
  echo "cp ../uedge.pack ../dev/$A/include"
  cp ../uedge.pack ../dev/$A/include
}

# Configure with mio. Use $BASIS_ROOT
f_config() { $BASIS_ROOT/bin/mio -a $*; }

# Run test suite.
f_test() {
  for n in 1 2 3; do
    [ -x ../test/level_$n/do-test ] && (cd ../test/level_$n && ./do-test)
  done
}

#######################################################################
RM=/bin/rm
PWD=`pwd`
test `basename $PWD` = "builder" ||
  { echo "Must execute dsys from builder directory"; exit 1; }

case "$1" in
  mac|clean) xop ./pck "$@";;
  build) xop ./pck mac; xop ./pck "$@"; getpack;;
  load) shift; (cd .. && ./pck link "$@");;
  delete) shift
          args=${1:-"pck ../dev/*/"}
          for i in $args; do
            b=`basename $i`
            if [ "$b" = pck -o -f "../$b/pre-Make" ]; then
              xop $RM -rf $b
              $RM -rf ../dev/$b ../test/level_?/$b debuggable.$b optimized.$b
              echo "$b deleted"
            elif [ "$b" = "*" ]; then # ../dev is empty: Do nothing.
              :
            else
              echo "Bad argument: $i"
              usage
            fi
          done;;
  config|test) comm=f_$1; shift; $comm "$@";;
  *) usage;;
esac
