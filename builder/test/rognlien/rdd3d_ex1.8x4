#Coarse mesh (nx=8, ny=4) for DIII-D MHD equilibrium
#Uses diffusive neutrals, so five variables (ni,upi,Te,Ti,ng)
#
package flx;package grd;package bbb
# Set the geometry
	mhdgeo = 1 		#use MHD equilibrium
!rm -f aeqdsk neqdsk		#change names of MHD eqil. files 
!cp aeqdskd3d aeqdsk		# (Cannot tab or indent these 3 lines)
!cp neqdskd3d neqdsk
	psi0min1 = 0.98		#normalized flux on core bndry
	psi0min2 = 0.98		#normalized flux on pf bndry
	psi0sep = 1.00001	#normalized flux at separatrix
	psi0max = 1.07		#normalized flux on outer wall bndry
	ngrid = 1		#number of meshes (always set to 1)
	nxleg(1,1) = 2		#pol. mesh pts from inner plate to x-point
	nxcore(1,1) = 2		#pol. mesh pts from x-point to top on inside
	nxcore(1,2) = 2		#pol. mesh pts from top to x-point on outside
	nxleg(1,2) = 2		#pol. mesh pts from x-point to outer plate
	nysol(1) = 3		#rad. mesh pts in SOL
	nycore(1) =1		#rad. mesh pts in core

# Finite-difference algorithms (upwind, central diff, etc.)
	methn = 33		#ion continuty eqn
	methu = 33		#ion parallel momentum eqn
	methe = 33		#electron energy eqn
	methi = 33		#ion energy eqn
	methg = 33		#neutral gas continuity eqn

# Boundary conditions
	ncore(1) = 2.e19	#hydrogen ion density on core
	iflcore = 0		#flag; =0, fixed Te,i; =1, fixed power on core
	tcoree = 100.		#core Te 
	tcorei = 100.		#core Ti
	tedge = 2.		#fixed wall,pf Te,i if istewcon=1, etc
	recycp(1) = 0.8		#hydrogen recycling coeff at plates

# Transport coefficients
	difni(1) = 1.		#D for radial hydrogen diffusion
	kye = 1.		#chi_e for radial elec energy diffusion
	kyi = 1.		#chi_i for radial ion energy diffusion
	travis(1) = 1.		#eta_a for radial ion momentum diffusion

# Flux limits
	flalfe = 0.21		#electron parallel thermal conduct. coeff
	flalfi = 0.21		#ion parallel thermal conduct. coeff
	flalfv = 1.		#ion parallel viscosity coeff
	flalfgx = 1.e20		#neut. gas in poloidal direction
	flalfgy = 1.e20		#neut. gas in radial direction

# Solver package
	svrpkg = "vodpk"	#Time-dependent solver vodpk used
	premeth = "banded"	#Solution method for precond. Jacobian matrix



