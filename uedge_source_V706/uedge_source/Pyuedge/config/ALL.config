##########################################################################
#
#  Sets make-variables for python and python/Basis package builds
#   $Id: ALL.config,v 7.0 2018/02/28 18:32:43 meyer8 Exp $
#
##########################################################################


#----- Note that ifndef VAR is true if VAR was set to blank; but
#      ifndef VAR is false with VAR = $(BLANK) and BLANK undefined.
#      So, assuming DEFINED and BLANK have not yet been defined, the
#      following lines do nothing but suggest make-variables to use
#      that will test as defined but expand to blank.

DEFINED  =
BLANK    =


#----- Default HasBASIS to be undefined, and undefine some
#      pre-defined make-variables in order to control defaults below.

HasBASIS =
CC       =
LD       =
DEBUG    =


#----- Platform-dependent flags

include $(CONFIG)/$(ARCH_INC).config


#----- Defaults

###### Utilities

ifndef MAKE
  # gmake is required
  MAKE = gmake
endif

ifndef MV
  MV = /bin/mv -f
endif

ifndef SHELL
  SHELL = /bin/sh
endif

ifndef PKG
  PKG = $(shell basename `pwd`)
endif

ifndef ARCH
  ARCH = $(ARCH_INC)
endif


###### Compilers and loaders

ifndef FORT
  FORT = f90
endif

ifndef CC
  CC = cc
endif

ifndef LD
  # had been LDFLAGS = -g -v
  LD = $(CC)
endif

ifndef LDFLAGS
  LDFLAGS = 
endif


###### Python

ifndef PYTHON_ROOT
  PYTHON_ROOT = /usr/local
endif
ifndef PYVERS
  PYVERS = 2.2
endif

ifndef PYTHON
  PYTHON = $(PYTHON_ROOT)/bin/python$(PYVERS)
endif
ifndef PYTHON_INCLUDES
  PYTHON_INCLUDES  = -I$(PYTHON_ROOT)/include/python$(PYVERS) \
    $(PYTHON_LINCLUDES)
endif
ifndef PYTHON_OBJ
  PYTHON_OBJ       = $(PYTHON_ROOT)/lib/python$(PYVERS)/config/python.o
endif
ifndef PYTHON_SOS
  # How much is needed here depends on what is asked for in config.c
  # and what is available in PYTHON_LIB. No good default. Set in CPU.config's.
  # NB: poor thing to require .so's on load line at all! Shouldn't be
  # building a python executable, but .so's to load into public python.
endif
ifndef PYTHON_LIB
  PYTHON_LIB = -L$(PYTHON_ROOT)/lib/python$(PYVERS)/config -lpython$(PYVERS)
endif

ifndef PYTHON_LINCLUDES
  PYTHON_LINCLUDES = 
endif

# Directory for output of python setup.py install
ifndef PYTHON_INSTALL
  PYTHON_INSTALL = $(ARCH)
endif

ifndef CONFIG.C
  CONFIG.C = config.c
endif

ifndef SWIG
  SWIG = swig
endif

ifndef SWIG_MOD_  # newer [older] versions of swig require "_" [ ]
  SWIG_MOD_ = _
endif


###### pyBasis

ifndef MPPL_ROOT
  ifdef HasBASIS
    MPPL_ROOT = $(BASIS_ROOT)
  else
    MPPL_ROOT = /ALL.config_cant_find_mppl # crash the make
  endif
endif

ifndef RealSize
  RealSize   = 8    # double precision on 32-bit
endif

ifndef Macros
  # changes some single precision names to double prec
  Macros = sptodp
endif

ifndef MAC
  ifdef HasBASIS
    MAC = $(BASIS_ROOT)/bin/mac
  else
    # MAC = $(CONFIG_ROOT)/Mac_scripts/mac2
    MAC = $(TOP)/../Mac_scripts/mac2
  endif
endif

ifndef CONFIG_ROOT
  CONFIG_ROOT = $(subst /config,,$(CONFIG))
endif

ifndef PYUTILS
  PYUTILS = $(CONFIG_ROOT)/pyUtils
endif

ifndef PYWRAPPER
  PYWRAPPER = $(PYUTILS)/pywrapper
endif

ifndef PYMAC
  PYMAC = $(PYWRAPPER)/pymac.py
endif

ifndef PYCTOF
  PYCTOF = $(PYWRAPPER)/pyctof.py
endif

ifndef PYCTOF_FLAGS
  PYCTOF_FLAGS =
endif

ifndef PYBASIS_INCLUDES
  PYBASIS_INCLUDES = -I$(PYWRAPPER)
endif

ifndef ARCH_PB
  # for -t<machine> passed to pymac.py
  ARCH_PB = $(ARCH_INC)
  ifeq ($(strip $(CPU)),AIX)
    ARCH_PB = SP
  endif
  ifeq ($(strip $(CPU)),Linux)
    ARCH_PB = LINUX
  endif
endif


###### Libraries

ifndef X11_LIB
  X11_LIB = -L/usr/X11R6/lib -lX11
endif

ifndef UTIL_LIBS
  UTIL_LIBS = -lutil
endif

ifndef THREAD_LIBS
  THREAD_LIBS = $(BLANK)
endif

ifndef READLINE
  READLINE = -lreadline
endif

ifndef GIST_LIB
  # default is run-time importable from python distribution, not in config.c
  GIST_LIB = 
endif
